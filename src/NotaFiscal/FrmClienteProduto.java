/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package NotaFiscal;

import telas.Vendas.FrmTelaVenda;
import Regras.Config;
import Regras.ProdutoVenda;
import facade.AliquotaFacade;
import facade.EstoqueFacade;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Wolverine
 */
public class FrmClienteProduto extends javax.swing.JFrame {
    
    List<ProdutoVenda> listaProdutoVendas;
    ConsultaClienteProdutoTableModel model;
    List<Clienteproduto> listaClienteProduto;
    Clienteproduto clienteProduto;
    private Config config;

    /**
     * Creates new form FrmClienteProduto
     */
    public FrmClienteProduto(List<ProdutoVenda> listaProdutoVendas, Config config) {
        this.listaProdutoVendas = listaProdutoVendas;
        this.config = config;
        initComponents();
        listarClienteProduto();
        this.setLocationRelativeTo(null);
        nomejTextField.requestFocus();
        this.setVisible(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaProdutojTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        nomejTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        listaProdutojTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Nome do Cliente"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(listaProdutojTable);
        listaProdutojTable.getColumnModel().getColumn(0).setResizable(false);

        jLabel1.setText("Nome do Cliente");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("F10 - Confirma Cliente         ESC - Cancela Cliente");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(114, 114, 114))
        );

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F12, 0));
        jMenuItem1.setText("Confirma");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        jMenuItem2.setText("Cancela");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        salvarClienteProduto();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmClienteProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmClienteProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmClienteProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmClienteProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable listaProdutojTable;
    private javax.swing.JTextField nomejTextField;
    // End of variables declaration//GEN-END:variables

    public void listarClienteProduto(){
        NotaFiscalController notaFiscalController = new NotaFiscalController();
        listaClienteProduto = notaFiscalController.listaClienteProduto();
        if (listaClienteProduto==null){
            listaClienteProduto = new ArrayList<Clienteproduto>();
        }
        model = new ConsultaClienteProdutoTableModel(listaClienteProduto);
        listaProdutojTable.setModel(model);
        listaProdutojTable.repaint();
    }
    
    public void salvarClienteProduto(){
        NotaFiscalController notaFiscalController = new NotaFiscalController();
        if (nomejTextField.getText().length()>0){
            clienteProduto = notaFiscalController.pesquisarClienteProduto(nomejTextField.getText());
            if (clienteProduto==null){
                clienteProduto = new Clienteproduto();
                clienteProduto.setNome(nomejTextField.getText());
                clienteProduto = notaFiscalController.salvarClienteProduto(clienteProduto);
            }
        }else {
            JOptionPane.showMessageDialog(null, "Nome não pode ser em branco");
            nomejTextField.requestFocus();
        }
        if (clienteProduto==null){
            JOptionPane.showMessageDialog(null,  "Erro ao Salvar...Salve novamente");
        }else {
            salvarProdutoCliente();
        }
    }
    
    public void salvarProdutoCliente(){
        NotaFiscalController notaFiscalController = new NotaFiscalController();
        for (int i=0;i<listaProdutoVendas.size();i++){
            Produtotemp temp = new Produtotemp();
            temp.setCodigo(listaProdutoVendas.get(i).getProduto().getReferencia());
            temp.setCst(" ");
            temp.setDescricao(listaProdutoVendas.get(i).getProduto().getDescricao());
            temp.setQuantidade(listaProdutoVendas.get(i).getQuantidade());
            temp.setUnidade(listaProdutoVendas.get(i).getProduto().getUnidade());
            temp.setValorCompra(0.0);
            double valor = listaProdutoVendas.get(i).getValorUnitario();
            temp.setValorUnitario((valor));
            valor = listaProdutoVendas.get(i).getValorTotal();
            temp.setValorTotal(valor);
            temp.setAliquotaIcms(buscarAliquotaICMS(listaProdutoVendas.get(i).getProduto().getAliquota()));
            temp.setValorCompra(buscarValorCompra(listaProdutoVendas.get(i).getProduto().getIdProduto()));
            temp.setClienteproduto(this.clienteProduto.getIdclienteProduto());
            notaFiscalController.salvarProdutoTemp(temp);
        }
        JOptionPane.showMessageDialog(rootPane, "Nota Gerada com Sucesso");
        this.dispose();
    }
    
    public Double buscarValorCompra(int idProduto){
        EstoqueFacade estoqueFacade = new EstoqueFacade();
        try {
            return estoqueFacade.getEstoque(idProduto, this.config.getEmpresa().getIdempresa()).getValorCusto().doubleValue();
        } catch (Exception ex) {
            Logger.getLogger(FrmTelaVenda.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane," Erro Consultar Valor compra");
            return 0.0;
        }
    }
    
    public String buscarAliquotaICMS(int idAliquota){
        AliquotaFacade aliquotaFacade = new AliquotaFacade();
        try {
            String aliquota = aliquotaFacade.getAliquota(idAliquota).getDescricao();
            return aliquota.substring(1, 2);
        } catch (SQLException ex) {
            Logger.getLogger(FrmTelaVenda.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Erro Consultar Aliquota");
            return null;
        }
    }
    

}
